{
  "meta": {
    "options": {
      "linkedFile": "/views/cadastrar.ejs",
      "linkedForm": "frmCadastrar"
    },
    "$_POST": [
      {
        "type": "text",
        "fieldName": "firstname",
        "options": {
          "rules": {
            "core:required": {
              "param": "",
              "message": "Obrigatório."
            }
          }
        },
        "name": "firstname"
      },
      {
        "type": "text",
        "fieldName": "lastname",
        "options": {
          "rules": {
            "core:required": {
              "param": "",
              "message": "Obrigatório."
            }
          }
        },
        "name": "lastname"
      },
      {
        "type": "text",
        "fieldName": "email",
        "options": {
          "rules": {
            "core:required": {
              "param": "",
              "message": "Obrigatório."
            },
            "core:email": {
              "message": "Email inválido."
            }
          }
        },
        "name": "email"
      },
      {
        "type": "text",
        "fieldName": "password",
        "options": {
          "rules": {
            "core:required": {
              "param": "",
              "message": "Obrigatório."
            }
          }
        },
        "name": "password"
      },
      {
        "type": "text",
        "name": "cargo"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "",
        "module": "auth",
        "action": "restrict",
        "options": {
          "provider": "security",
          "loginUrl": "/entrar",
          "forbiddenUrl": "/",
          "permissions": [
            "coord"
          ]
        }
      },
      {
        "name": "email",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{$_POST.email.lowercase().trim()}}"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "validate",
        "module": "validator",
        "action": "validate",
        "options": {
          "data": [
            {
              "name": "validate_1",
              "value": "{{email}}",
              "rules": {
                "db:notexists": {
                  "param": {
                    "connection": "mydb",
                    "table": "users",
                    "column": "email"
                  },
                  "message": "Este e-mail já está cadastrado."
                }
              },
              "fieldName": "email"
            }
          ]
        }
      },
      {
        "name": "hash",
        "module": "crypto",
        "action": "passwordHash",
        "options": {
          "password": "{{$_POST.password}}"
        },
        "outputType": "text"
      },
      {
        "name": "insert",
        "module": "dbupdater",
        "action": "insert",
        "options": {
          "connection": "mydb",
          "sql": {
            "type": "insert",
            "values": [
              {
                "table": "users",
                "column": "firstname",
                "type": "text",
                "value": "{{$_POST.firstname}}"
              },
              {
                "table": "users",
                "column": "lastname",
                "type": "text",
                "value": "{{$_POST.lastname}}"
              },
              {
                "table": "users",
                "column": "email",
                "type": "text",
                "value": "{{email}}"
              },
              {
                "table": "users",
                "column": "password",
                "type": "text",
                "value": "{{hash}}"
              },
              {
                "table": "users",
                "column": "cargo",
                "type": "text",
                "value": "{{$_POST.cargo}}"
              }
            ],
            "table": "users",
            "returning": "userID",
            "query": "insert into `users` (`cargo`, `email`, `firstname`, `lastname`, `password`) values (?, ?, ?, ?, ?) returning `userID`",
            "params": [
              {
                "name": ":P1",
                "type": "expression",
                "value": "{{$_POST.firstname}}"
              },
              {
                "name": ":P2",
                "type": "expression",
                "value": "{{$_POST.lastname}}"
              },
              {
                "name": ":P3",
                "type": "expression",
                "value": "{{email}}"
              },
              {
                "name": ":P4",
                "type": "expression",
                "value": "{{hash}}"
              },
              {
                "name": ":P5",
                "type": "expression",
                "value": "{{$_POST.cargo}}",
                "test": ""
              }
            ]
          }
        },
        "meta": [
          {
            "name": "identity",
            "type": "text"
          },
          {
            "name": "affected",
            "type": "number"
          }
        ],
        "output": false
      }
    ]
  },
  "usedModules": {
    "argon2": "^0.30.2"
  }
}