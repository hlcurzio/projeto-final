{
  "meta": {
    "options": {
      "linkedFile": "/views/cadastrar.ejs",
      "linkedForm": "frmCadastrar"
    },
    "$_POST": [
      {
        "type": "text",
        "fieldName": "firstname",
        "options": {
          "rules": {
            "core:required": {
              "param": "",
              "message": "Obrigatório."
            }
          }
        },
        "name": "firstname"
      },
      {
        "type": "text",
        "fieldName": "lastname",
        "options": {
          "rules": {
            "core:required": {
              "param": "",
              "message": "Obrigatório."
            }
          }
        },
        "name": "lastname"
      },
      {
        "type": "text",
        "fieldName": "email",
        "options": {
          "rules": {
            "core:required": {
              "param": "",
              "message": "Obrigatório."
            },
            "core:email": {
              "message": "Email inválido."
            }
          }
        },
        "name": "email"
      },
      {
        "type": "text",
        "fieldName": "password",
        "options": {
          "rules": {
            "core:required": {
              "param": "",
              "message": "Obrigatório."
            }
          }
        },
        "name": "password"
      },
      {
        "type": "text",
        "fieldName": "code",
        "options": {
          "rules": {
            "core:required": {
              "param": "",
              "message": "Obrigatório."
            }
          }
        },
        "name": "code"
      }
    ]
  },
  "exec": {
    "steps": [
      {
        "name": "email",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{$_POST.email.lowercase().trim()}}"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "validate",
        "module": "validator",
        "action": "validate",
        "options": {
          "data": [
            {
              "name": "validate_1",
              "value": "{{email}}",
              "rules": {
                "db:notexists": {
                  "param": {
                    "connection": "mydb",
                    "table": "users",
                    "column": "email"
                  }
                }
              },
              "fieldName": "email"
            }
          ]
        }
      },
      {
        "name": "code",
        "module": "core",
        "action": "setvalue",
        "options": {
          "value": "{{email.sha1(email)}}"
        },
        "meta": [],
        "outputType": "text"
      },
      {
        "name": "",
        "module": "core",
        "action": "condition",
        "options": {
          "if": "{{code==$_POST.code}}",
          "then": {
            "steps": [
              {
                "name": "hash",
                "module": "crypto",
                "action": "passwordHash",
                "options": {
                  "password": "{{$_POST.password}}"
                },
                "outputType": "text"
              },
              {
                "name": "insertUser",
                "module": "dbupdater",
                "action": "insert",
                "options": {
                  "connection": "mydb",
                  "sql": {
                    "type": "insert",
                    "values": [
                      {
                        "table": "users",
                        "column": "firstname",
                        "type": "text",
                        "value": "{{$_POST.firstname}}"
                      },
                      {
                        "table": "users",
                        "column": "lastname",
                        "type": "text",
                        "value": "{{$_POST.lastname}}"
                      },
                      {
                        "table": "users",
                        "column": "email",
                        "type": "text",
                        "value": "{{email}}"
                      },
                      {
                        "table": "users",
                        "column": "password",
                        "type": "text",
                        "value": "{{hash}}"
                      }
                    ],
                    "table": "users",
                    "returning": "userID",
                    "query": "INSERT INTO users\n(firstname, lastname, email, password) VALUES (:P1 /* {{$_POST.firstname}} */, :P2 /* {{$_POST.lastname}} */, :P3 /* {{email}} */, :P4 /* {{hash}} */)",
                    "params": [
                      {
                        "name": ":P1",
                        "type": "expression",
                        "value": "{{$_POST.firstname}}"
                      },
                      {
                        "name": ":P2",
                        "type": "expression",
                        "value": "{{$_POST.lastname}}"
                      },
                      {
                        "name": ":P3",
                        "type": "expression",
                        "value": "{{email}}"
                      },
                      {
                        "name": ":P4",
                        "type": "expression",
                        "value": "{{hash}}"
                      }
                    ]
                  }
                },
                "meta": [
                  {
                    "name": "identity",
                    "type": "text"
                  },
                  {
                    "name": "affected",
                    "type": "number"
                  }
                ],
                "output": false
              },
              {
                "name": "identity",
                "module": "auth",
                "action": "login",
                "options": {
                  "provider": "security",
                  "username": "{{email}}",
                  "remember": 1
                },
                "output": true,
                "meta": []
              }
            ]
          },
          "else": {
            "steps": {
              "name": "Erro",
              "module": "core",
              "action": "response",
              "options": {
                "data": "Token inválido",
                "status": 400
              }
            }
          }
        },
        "outputType": "boolean"
      }
    ]
  },
  "usedModules": {
    "argon2": "^0.30.2"
  }
}